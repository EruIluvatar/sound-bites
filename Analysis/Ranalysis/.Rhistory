### Data import from csv files ###
# get list of all data files
# See Exp_Bemerkungen.xlsx
filelist <- list.files(path = "../data/rawdata/", full.names = TRUE)
# load the first file -> data frame has right number of columns
rawdata <- read.csv(file = filelist[1], header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
for (file in filelist[2:length(filelist)]) {
tempdata <- read.csv(file = file, header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
rawdata <- rbind(rawdata, tempdata)
}
glimpse(rawdata)
require(tidyverse)
glimpse(rawdata)
# save
save(rawdata, file = "../data/rawdata.Rdata")
# clean slate
rm(list = ls())
require(tidyverse)
# load raw data
load("../data/rawdata.Rdata")
rawdata$stim_id
# remove .wav from stim_id
rawdata$stim_id <- sub("(.*)\\.wav", "\\1", rawdata$stim_id)
ratings <- rawdata %>%
filter(event %in% c("valence_rating", "arousal_rating")) %>%
mutate(value = as.numeric(value))
searches <- rawdata %>%
filter(event == "SearchResponse") %>%
separate(stim_id, c("sound", "visual"), sep = "-", fill = "left")
searches <- searches %>%
separate(visual, c("salience", "position", "orientation"), sep = "_") %>%
mutate(salience = ifelse(salience == "L1", "low", "high")) %>%
mutate(position = ifelse(grepl("cen", position), "central", "peripheral")) %>%
mutate(orientation = ifelse(grepl("l", orientation), "left", "right"))
# save data frames
save(ratings, file = "../data/ratings.Rdata")
save(searches, file = "../data/searches.Rdata")
require(tidyverse)
# load data
load("../data/ratings.Rdata")
load("../data/searches.Rdata")
# Sound Bites
# Michael Schulte-Mecklenbeck, Stefan Borer
# clean slate
rm(list = ls())
require(tidyverse)
# load data
load("../data/ratings.Rdata")
load("../data/searches.Rdata")
ratings <- ratings %>%
group_by(stim_id, event) %>%
summarise(
val = mean(value)
)
ratings
glimpse(ratings)
# Sound Bites
# Michael Schulte-Mecklenbeck, Stefan Borer
# clean slate
rm(list = ls())
require(tidyverse)
# load data
load("../data/ratings.Rdata")
load("../data/searches.Rdata")
View(ratings)
rating.summary <-
ratings %>%
group_by(stim_id, event) %>%
summarise(
val = mean(value)
)
View(rating.summary)
rating.summary <-
ratings %>%
group_by(respondent, stim_id, event) %>%
summarise(
val = mean(value)
)
View(rating.summary)
rating.summary <-
ratings %>%
group_by(stim_id, event) %>%
summarise(
val = mean(value)
)
rating.summary <-
ratings %>%
group_by(stim_id, event) %>%
summarise(
val = mean(value)
)
View(rating.summary)
gimpes(rating.summary)
glimpes(rating.summary)
glimpse(rating.summary)
View(ratings)
s
rating.summary <-
ratings %>%
group_by(stim_id, event) %>%
summarise(
val = mean(value),
resp = mean(responseTime)
)
View(rating.summary)
ggplot(rating.summary, aes(stim_id, val, group = event, color = event)) +
geom_bar(stat = 'identity')
ggplot(rating.summary, aes(stim_id, val, color = event)) +
geom_bar(stat = 'identity') +
facet_grid(event ~ .)
ggplot(rating.summary, aes(stim_id, val, fill = event)) +
geom_bar(stat = 'identity') +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, val, fill = event)) +
gstat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, val, fill = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, val, fill = event)) +
stat_summary(fun.y = mean, geom = "point")
View(ratings)
ggplot(ratings, aes(stim_id, value, fill = event)) +
stat_summary(fun.y = mean, geom = "point")
ggplot(ratings, aes(stim_id, value, fill = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, value, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, resonseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
ggplot(ratings, aes(stim_id, responseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
View(searches)
unique(searches$sound)
ggplot(searches, aes(stim_id, responseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ .)
ggplot(searches, aes(sound, responseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ .)
ggplot(searches, aes(sound, responseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
ggplot(searches, aes(sound, responseTime, colour = event)) +
stat_summary(fun.y = mean, geom = "bar") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
ggplot(searches, aes(sound, responseTime, fill = event)) +
stat_summary(fun.y = mean, geom = "bar") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
ggplot(searches, aes(sound, responseTime, fill = salience)) +
stat_summary(fun.y = mean, geom = "bar") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
ggplot(searches, aes(sound, responseTime, fill = salience)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
ggplot(searches, aes(sound, responseTime, colour = salience)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
fct_relevel(searches$sound, "firealarm", "growlingdog", "cluckinghen", "microwaveoven")
searches$sound <- fct_relevel(searches$sound, "firealarm", "growlingdog", "cluckinghen", "microwaveoven")
ggplot(searches, aes(sound, responseTime, colour = salience)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
# Sound Bites
# Michael Schulte-Mecklenbeck, Stefan Borer
# clean slate
rm(list = ls())
require(tidyverse)
install.packages(c("broom", "car", "hms", "htmlTable", "pillar", "Rcpp", "RcppEigen", "tm", "yaml"))
# clean slate
rm(list = ls())
require(tidyverse)
### Data import from csv files ###
# get list of all data files
# See Exp_Bemerkungen.xlsx
filelist <- list.files(path = "../data/rawdata/", full.names = TRUE)
# load the first file -> data frame has right number of columns
rawdata <- read.csv(file = filelist[1], header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
for (file in filelist[2:length(filelist)]) {
tempdata <- read.csv(file = file, header = TRUE, stringsAsFactors = FALSE, encoding = "UTF-8")
rawdata <- rbind(rawdata, tempdata)
}
glimpse(rawdata)
# save
save(rawdata, file = "../data/rawdata.Rdata")
# clean slate
rm(list = ls())
require(tidyverse)
# load raw data
load("../data/rawdata.Rdata")
# remove .wav from stim_id
rawdata$stim_id <- sub("(.*)\\.wav", "\\1", rawdata$stim_id)
ratings <- rawdata %>%
filter(event %in% c("valence_rating", "arousal_rating")) %>%
mutate(value = as.numeric(value))
searches <- rawdata %>%
filter(event == "SearchResponse") %>%
separate(stim_id, c("sound", "visual"), sep = "-", fill = "left")
searches <- searches %>%
separate(visual, c("salience", "position", "orientation"), sep = "_") %>%
mutate(salience = ifelse(salience == "L1", "low", "high")) %>%
mutate(position = ifelse(grepl("cen", position), "central", "peripheral")) %>%
mutate(orientation = ifelse(grepl("l", orientation), "left", "right"))
# save data frames
save(ratings, file = "../data/ratings.Rdata")
save(searches, file = "../data/searches.Rdata")
# clean slate
rm(list = ls())
require(tidyverse)
load("../data/ratings.Rdata")
load("../data/searches.Rdata")
ggplot(ratings, aes(stim_id, value, colour = event)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(. ~ event)
searches$sound <- fct_relevel(searches$sound, "firealarm", "growlingdog", "cluckinghen", "microwaveoven")
# plot response time across audiory stimuli
ggplot(searches, aes(sound, responseTime, colour = salience)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free")
### export as csv
write.table(durations, file = "../data/output/durations.csv",
sep = ';', dec = '.', row.names = FALSE, col.names = TRUE, quote = FALSE)
save(durations, file = "../data/durations.Rdata")
View(searches)
ggplot(searches, aes(sound, responseTime, colour = salience)) +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", width = 0.1) +
facet_grid(salience ~ ., scales = "free") +
theme_minimal(base_family = 'mono', base_size = 10)
ggsave('plots/Rep_Figure2B.png')
getwd()
ggsave('../plots/Rep_Figure2B.png')
